<div class="wdghtml" taskKey="com.javarush.task.task24.task2413.big05">
<h3>Арканоид(5)</h3>
<p>Чего еще не хватает классу <span class="text-corporate"><strong>Arkanoid</strong></span>?<br />
Во-первых ему нужен метод <mark>run()</mark>, в котором будет описана основная логика программы.<br />
Еще нужен метод <mark>move()</mark> &#8212; который будет двигать на один шаг все объекты требующие движения.<br />
Создай методы <mark>run()</mark> и <mark>move()</mark>.</p>
<p>Еще нам понадобится <strong>НЕ</strong> приватная статическая переменная game типа <span class="text-corporate"><strong>Arkanoid</strong></span>, которая будет хранить ссылку на созданный экземпляр класса <span class="text-corporate"><strong>Arkanoid</strong></span>.</p>
<p><strong>Выглядеть это должно примерно так:</strong><br />
<span class="text-neon">static Arkanoid game;</span></p>

<hr>
<h3>Арканоид(4)</h3>
<p>Также классу <span class="text-corporate"><strong>Arkanoid</strong></span> нужно будет хранить ссылку на шарик (<span class="text-corporate"><strong>Ball</strong></span>), &#171;<em><strong>подставку</strong></em>&#187; <span class="text-corporate"><strong>Stand</strong></span> и список &#171;<em><strong>кирпичей</strong></em>&#171;.</p>
<p><strong>Надо:</strong><br />
а) создать в классе <span class="text-corporate"><strong>Arkanoid</strong></span> два private поля: <mark class="green">ball</mark> типа <span class="text-corporate"><strong>Ball</strong></span> и <mark class="user">stand</mark> типа <strong><span class="text-corporate">Stand</span></strong><br />
б) добавить private поле <mark class="user">bricks</mark> типа <span class="text-red"><strong>List</strong>&lt;Brick&gt;</span><br />
в) добавь для них публичные <strong>геттеры</strong> и <strong>сеттеры</strong></p>

<hr>
<h3>Арканоид(3)</h3>
<p>Пожалуй, пора добавить конструктор в класс <span class="text-corporate"><strong>Arkanoid</strong></span>.<br />
Конструктор должен принимать два параметра типа <span class="text-corporate">int</span> (<mark class="user">width</mark> и <mark class="user">height</mark>) и корректно устанавливать значения соответствующих полей класса.</p>

<hr>
<h3>Арканоид(2)</h3>
<p>Главному <strong>классу</strong> (<span class="text-corporate"><strong>Arkanoid</strong></span>) нужно будет хранить информацию о размерах поля, где будут происходить все действия.</p>
<p>Поэтому:<br />
а) добавь в класс <span class="text-corporate"><strong>Arkanoid</strong></span> два приватных поля <mark class="user">width</mark>(<strong>ширина</strong>) и <mark class="user">height</mark>(<strong>высота</strong>) типа <span class="text-corporate">int</span><br />
б) создай для них публичные <strong>геттеры</strong> и <strong>сеттеры</strong></p>

<hr>
<h3>Арканоид(1)</h3>
<p>Давай сегодня напишем игру <strong>Арканоид</strong>.</p>
<p>В оригинале это выглядит примерно так <em>http://www.youtube.com/watch?v=Th-Z6QQ5AOQ</em><br />
Для начала мы напишем <strong>упрощенную</strong> <strong>версию</strong> этой игры.<br />
У нас будут кубики, шарик и летающая &#171;<em><strong>подставка</strong></em>&#171;, которая не дает шарику упасть.</p>
<p>Поэтому нам понадобятся классы:<br />
а) <span class="text-corporate"><strong>Arkanoid</strong></span> &#8212; класс в котором происходят основные действия. Также в нем будет наша точка входа в программу, метод <mark>main</mark>.<br />
б) <span class="text-corporate"><strong>Ball</strong></span> &#8212; <strong>шарик</strong>.<br />
в) <strong><span class="text-corporate">Brick</span></strong> &#8212; &#171;<em><strong>кирпичи</strong></em>&#171;, которые мы сбиваем шариком.<br />
г) <span class="text-corporate"><strong>Stand</strong></span> &#8212; <strong>летающая</strong> <strong>подставка</strong>.</p>
<p>Создай их, и не забудь о методе <mark>public static void main (String[] <strong>args</strong>)</mark> в класе <span class="text-corporate"><strong>Arkanoid</strong></span>.</p>

</div>
